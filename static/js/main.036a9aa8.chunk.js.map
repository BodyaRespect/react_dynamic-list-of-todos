{"version":3,"sources":["types/Status.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api/api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","TodoList","todos","setTodoId","todoId","className","map","todo","id","completed","title","cn","type","onClick","TodoFilter","query","setSearchQuery","setFilter","onChange","e","target","value","Completed","Active","All","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","response","json","TodoModal","useState","setTodo","user","setUser","loading","setLoading","getSelectedTodo","find","chosenTodo","loadData","a","currentTodo","userId","currentUser","useEffect","href","name","App","setTodos","selectedFilter","setSelectedFilter","setQuery","loadTodos","loadedTodos","searchedTodos","filter","trim","toLowerCase","includes","filteredTodos","useMemo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.036a9aa8.chunk.js","sourcesContent":["export enum Status {\n  All = 'default',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import cn from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  todoId: number,\n  setTodoId: (id: number) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, setTodoId, todoId }) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => {\n          const { id, completed, title } = todo;\n\n          return (\n            <tr\n              key={id}\n              data-cy=\"todo\"\n              className=\"\"\n            >\n              <td className=\"is-vcentered\">{id}</td>\n\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n\n              <td className=\"is-vcentered is-expanded\">\n                <p className={cn(\n                  { 'has-text-danger': !completed },\n                  { 'has-text-success': completed },\n                )}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                {todoId === id\n                  ? (\n                    <button\n                      data-cy=\"selectButton\"\n                      className=\"button\"\n                      type=\"button\"\n                      onClick={() => {\n                        setTodoId(0);\n                      }}\n                    >\n                      <span className=\"icon\">\n                        <i className=\"far fa-eye-slash\" />\n                      </span>\n                    </button>\n                  )\n                  : (\n                    <button\n                      data-cy=\"selectButton\"\n                      className=\"button\"\n                      type=\"button\"\n                      onClick={() => {\n                        setTodoId(id);\n                      }}\n                    >\n                      <span className=\"icon\">\n                        <i className=\"far fa-eye\" />\n                      </span>\n                    </button>\n                  )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { Status } from '../../types/Status';\n\ntype Props = {\n  query: string,\n  setSearchQuery: (searchQuery: string) => void,\n  setFilter: (status: Status) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setSearchQuery,\n  setFilter,\n}) => {\n  const handleSetFilter = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    switch (e.target.value) {\n      case Status.Completed:\n        setFilter(Status.Completed);\n        break;\n\n      case Status.Active:\n        setFilter(Status.Active);\n        break;\n\n      default:\n        setFilter(Status.All);\n        break;\n    }\n  };\n\n  const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(e.target.value);\n  };\n\n  const handleDeleteQuery = () => {\n    setSearchQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleSetFilter}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleSearch}\n        />\n\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleDeleteQuery}\n              aria-label=\"delete\"\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from '../types/Todo';\nimport { User } from '../types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(response => response.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api/api';\n\ntype Props = {\n  todos: Todo[],\n  todoId: number,\n  setTodoId: (id: number) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todos, todoId, setTodoId }) => {\n  const [todo, setTodo] = useState<Todo | null>(null);\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  const { completed, title } = todo || {};\n\n  const getSelectedTodo = (id: number) => {\n    return todos.find(chosenTodo => chosenTodo.id === id) || null;\n  };\n\n  const loadData = async () => {\n    const currentTodo = getSelectedTodo(todoId);\n\n    if (currentTodo) {\n      const currentUser = await getUser(currentTodo.userId);\n\n      setTodo(currentTodo);\n      setUser(currentUser);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [todoId]);\n\n  return (\n    <div\n      className=\"modal is-active\"\n      data-cy=\"modal\"\n    >\n      <div className=\"modal-background\" />\n\n      {loading\n        ? (<Loader />)\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                Todo #\n                {todoId}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => setTodoId(0)}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {completed\n                  ? (<strong className=\"has-text-success\">Done</strong>)\n                  : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n                {' by '}\n\n                <a href=\"mailto:Sincere@april.biz\">\n                  {user?.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api/api';\nimport { Todo } from './types/Todo';\nimport { Status } from './types/Status';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todoId, setTodoId] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [selectedFilter, setSelectedFilter] = useState(Status.All);\n  const [query, setQuery] = useState('');\n\n  const loadTodos = async () => {\n    const loadedTodos = await getTodos();\n\n    setTodos(loadedTodos);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  const searchedTodos = todos.filter((todo) => todo\n    .title.trim().toLowerCase().includes(query.trim().toLowerCase()));\n\n  const filteredTodos = useMemo(() => {\n    switch (selectedFilter) {\n      case Status.Active:\n        return searchedTodos.filter((todo) => !todo.completed);\n\n      case Status.Completed:\n        return searchedTodos.filter((todo) => todo.completed);\n\n      default:\n        return searchedTodos;\n    }\n  }, [searchedTodos, selectedFilter]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setSearchQuery={setQuery}\n                setFilter={setSelectedFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading\n                ? (\n                  <Loader />\n                ) : (\n                  <TodoList\n                    todoId={todoId}\n                    setTodoId={setTodoId}\n                    todos={filteredTodos}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todoId !== 0 && (\n        <TodoModal\n          todoId={todoId}\n          setTodoId={setTodoId}\n          todos={filteredTodos}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}